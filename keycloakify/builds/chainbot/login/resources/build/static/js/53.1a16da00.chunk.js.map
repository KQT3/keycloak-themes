{"version":3,"file":"static/js/53.1a16da00.chunk.js","mappings":"8gBAgBMA,GAAoBC,EAAAA,EAAAA,OAAK,SAACC,GAC5B,IAAQC,EAAiGD,EAAjGC,UAAWC,EAAsFF,EAAtFE,KAAI,EAAkFF,EAAhFG,6BAAAA,OAA4B,IAAG,GAAI,IAA6CH,EAA3CI,SAAAA,OAAQ,IAAG,EAAAC,EAAAA,EAAe,EAAKC,EAAO,EAAKN,EAAnG,gEAEEO,EAAgBL,EAAhBK,IAAKC,EAAWN,EAAXM,OAELC,EAA8BR,EAA9BQ,IAAKC,EAAyBT,EAAzBS,qBAEb,GAAgDC,EAAAA,EAAAA,WAAS,GAAM,eAAxDC,EAAgB,KAAEC,EAAmB,KAE5C,OACIC,EAAAA,cAACV,EAAQ,gCACCH,UAAAA,EAAWC,KAAAA,EAAMC,6BAAAA,GAAiCG,GAAO,CAC/DS,WAAYR,EAAI,qBAChBS,SACIF,EAAAA,cAAAA,OAAAA,CAAMG,GAAG,yBAAyBC,WAAWC,EAAAA,EAAAA,GAAKb,EAAQc,aAAcC,OAAQZ,EAAIa,YAAaC,OAAO,QACpGT,EAAAA,cAACU,EAAAA,EAAqB,eAACvB,UAAWA,EAAWwB,+BAAgCZ,EAAqBX,KAAMA,GAAUI,IAElHQ,EAAAA,cAAAA,MAAAA,CAAKI,WAAWC,EAAAA,EAAAA,GAAKb,EAAQoB,mBACzBZ,EAAAA,cAAAA,MAAAA,CAAKG,GAAG,kBAAkBC,WAAWC,EAAAA,EAAAA,GAAKb,EAAQqB,qBAC9Cb,EAAAA,cAAAA,MAAAA,CAAKI,WAAWC,EAAAA,EAAAA,GAAKb,EAAQsB,8BAGjCd,EAAAA,cAAAA,MAAAA,CAAKG,GAAG,kBAAkBC,WAAWC,EAAAA,EAAAA,GAAKb,EAAQuB,qBAC7CnB,EACGI,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAAAA,QAAAA,CACII,WAAWC,EAAAA,EAAAA,GAAKb,EAAQwB,cAAexB,EAAQyB,qBAAsBzB,EAAQ0B,oBAC7EC,KAAK,SACLC,MAAO1B,EAAO,cAElBM,EAAAA,cAAAA,SAAAA,CACII,WAAWC,EAAAA,EAAAA,GAAKb,EAAQwB,cAAexB,EAAQ6B,qBAAsB7B,EAAQ0B,oBAC7EC,KAAK,SACLG,KAAK,aACLF,MAAM,OACNG,gBAAc,GAEb9B,EAAI,cAIbO,EAAAA,cAAAA,QAAAA,CACII,WAAWC,EAAAA,EAAAA,GACPb,EAAQwB,cACRxB,EAAQyB,qBACRzB,EAAQgC,mBACRhC,EAAQ0B,oBAEZC,KAAK,SACLM,aAAc/B,EAAO,YACrBgC,UAAW5B,SAS/C,IAEA,W","sources":["../node_modules/keycloakify/src/lib/components/UpdateUserProfile.tsx"],"sourcesContent":["import React, { useState, memo } from \"react\";\nimport DefaultTemplate from \"./Template\";\nimport type { TemplateProps } from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { clsx } from \"../tools/clsx\";\nimport type { I18n } from \"../i18n\";\nimport { UserProfileFormFields } from \"./shared/UserProfileCommons\";\n\nexport type UpdateUserProfileProps = KcProps & {\n    kcContext: KcContextBase.UpdateUserProfile;\n    i18n: I18n;\n    doFetchDefaultThemeResources?: boolean;\n    Template?: (props: TemplateProps) => JSX.Element | null;\n};\n\nconst UpdateUserProfile = memo((props: UpdateUserProfileProps) => {\n    const { kcContext, i18n, doFetchDefaultThemeResources = true, Template = DefaultTemplate, ...kcProps } = props;\n\n    const { msg, msgStr } = i18n;\n\n    const { url, isAppInitiatedAction } = kcContext;\n\n    const [isFomSubmittable, setIsFomSubmittable] = useState(false);\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n            headerNode={msg(\"loginProfileTitle\")}\n            formNode={\n                <form id=\"kc-update-profile-form\" className={clsx(kcProps.kcFormClass)} action={url.loginAction} method=\"post\">\n                    <UserProfileFormFields kcContext={kcContext} onIsFormSubmittableValueChange={setIsFomSubmittable} i18n={i18n} {...kcProps} />\n\n                    <div className={clsx(kcProps.kcFormGroupClass)}>\n                        <div id=\"kc-form-options\" className={clsx(kcProps.kcFormOptionsClass)}>\n                            <div className={clsx(kcProps.kcFormOptionsWrapperClass)}></div>\n                        </div>\n\n                        <div id=\"kc-form-buttons\" className={clsx(kcProps.kcFormButtonsClass)}>\n                            {isAppInitiatedAction ? (\n                                <>\n                                    <input\n                                        className={clsx(kcProps.kcButtonClass, kcProps.kcButtonPrimaryClass, kcProps.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        value={msgStr(\"doSubmit\")}\n                                    />\n                                    <button\n                                        className={clsx(kcProps.kcButtonClass, kcProps.kcButtonDefaultClass, kcProps.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        name=\"cancel-aia\"\n                                        value=\"true\"\n                                        formNoValidate\n                                    >\n                                        {msg(\"doCancel\")}\n                                    </button>\n                                </>\n                            ) : (\n                                <input\n                                    className={clsx(\n                                        kcProps.kcButtonClass,\n                                        kcProps.kcButtonPrimaryClass,\n                                        kcProps.kcButtonBlockClass,\n                                        kcProps.kcButtonLargeClass\n                                    )}\n                                    type=\"submit\"\n                                    defaultValue={msgStr(\"doSubmit\")}\n                                    disabled={!isFomSubmittable}\n                                />\n                            )}\n                        </div>\n                    </div>\n                </form>\n            }\n        />\n    );\n});\n\nexport default UpdateUserProfile;\n"],"names":["UpdateUserProfile","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","msg","msgStr","url","isAppInitiatedAction","useState","isFomSubmittable","setIsFomSubmittable","React","headerNode","formNode","id","className","clsx","kcFormClass","action","loginAction","method","UserProfileFormFields","onIsFormSubmittableValueChange","kcFormGroupClass","kcFormOptionsClass","kcFormOptionsWrapperClass","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","type","value","kcButtonDefaultClass","name","formNoValidate","kcButtonBlockClass","defaultValue","disabled"],"sourceRoot":""}